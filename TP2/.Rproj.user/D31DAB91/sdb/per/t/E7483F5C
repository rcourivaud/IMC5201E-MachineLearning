{
    "collab_server" : "",
    "contents" : "#Import eds fichiers beta et gamme et conversion en data frame\n\nfinal.beta = read.table(\"./final.beta\")\nfinal.gamma = read.table(\"./final.gamma\")\n\ndf.beta = as.data.frame(final.beta)\ndf.gamma = as.data.frame(final.gamma)\n#Conversion de beta en exponentiel de chaque élement\ndf.beta.exp = exp(df.beta )\n\n\n#Transposition de beta\ndf.beta.exp.t = as.data.frame(t(df.beta.exp))\ncolnames(df.beta.exp.t ) <- c(\"K1\",\"K2\",\"K3\",\"K4\",\"K5\",\"K6\",\"K7\",\"K8\",\"K9\",\"K10\")\n\n\n\n#Application de la régression linéaire de chaque colonne( vu qu'on a transposé),\n#en fonction des colonnes restantes\ncoefficients.k1 = lm(K1~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k2 = lm(K2~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k3 = lm(K3~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k4 = lm(K4~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k5 = lm(K5~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k6 = lm(K6~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k7 = lm(K7~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k8 = lm(K8~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k9 = lm(K9~., data = df.beta.exp.t)$coefficients[2:10]\ncoefficients.k10 = lm(K10~., data = df.beta.exp.t)$coefficients[2:10]\n\n# Creation des top 3 pour le fichier beta pour chaque régression\ntop3.K1 = sort(abs(lm(K1~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K2 = sort(abs(lm(K2~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K3 = sort(abs(lm(K3~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K4 = sort(abs(lm(K4~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K5 = sort(abs(lm(K5~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K6 = sort(abs(lm(K6~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K7 = sort(abs(lm(K7~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K8 = sort(abs(lm(K8~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K9 = sort(abs(lm(K9~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\ntop3.K10 = sort(abs(lm(K10~., data = df.beta.exp.t)$coefficients[2:10]), decreasing = TRUE)[1:3]\n\n#Création d'une liste nommée qui contient tous les top 3\nl.pwk  = list(top3.K1,top3.K2,top3.K3,top3.K4, top3.K5,top3.K6,top3.K7,top3.K8, top3.K9,top3.K10)\nnames(l.pwk) <- c(\"V1\",\"V2\",\"V3\",\"V4\",\"V5\",\"V6\",\"V7\",\"V8\",\"V9\",\"V10\")\n\n\n#Fichier gamma\nView(df.gamma)\ndf.gamma.test = df.gamma\n\n#Normalisation de chaque élement en fonction de la somme de la ligne\nfor (i in 1:nrow(df.gamma.test)){\n  df.gamma.test[i,] = df.gamma.test[i,] /sum(df.gamma.test[i,])\n}\n\n#Calcul du score avec la fonction Score = Somme (liste.normalisée*meilleursthèmes)\n#Pour chaque valeure max dans chaque ligne dans Gamma, on récupère les top 3 dans beta \nscore.list = list()\nfor (i in 1:nrow(df.gamma.test)){\n  best.themes = sort(abs(df.gamma.test[i,]), decreasing = TRUE)[1]\n  name.theme = names(best.themes)\n  print(sum(l.pwk[[name.theme]]*best.themes[[name.theme]]))\n  score.list[[i]] = sum(l.pwk[[name.theme]]*best.themes[[name.theme]])\n}\nscore.list\n",
    "created" : 1481121039242.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "185632703",
    "id" : "E7483F5C",
    "lastKnownWriteTime" : 1481123145,
    "last_content_update" : 1481123145620,
    "path" : "~/Cours/IMC-5101B/TP2/script.R",
    "project_path" : "script.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}