mse()
installed.packages("hydroGOF")
library(hydroGOF)
ILILag2 = paste(c(NA, NA), FluTrain$ILI[0:-2])
ILILag2
ILILag2 = paste(c(NA, NA), as.vector(FluTrain$ILI[0:-2]))
ILILag2
ILILag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2])))
ILILag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2]))
ILILag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2])))
ILILag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2]))
ILILag2
length(ILILag2)
length(ILILag2) == length(FluTrain$ILI)
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2]))
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
FluTrend2 = lm(ILI ~ Queries + ILI_Lag2 , data = FluTrain)
summary(FluTrend2)
paste("The week is ",FluTrain20042011[max(FluTrain20042011$Queries),]$week)
FluTrain20042011[max(FluTrain20042011$ILI),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mon+1)
# Question 2)
FluTrain20042011[max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$Queries),]$date1$mon+1)
FluTrain20042011[max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$IQueriesLI==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mon+1)
# Question 2)
FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
FluTrend2 = lm(ILI ~ Queries + ILI_Lag2 , data = FluTrain)
summary(FluTrend2)
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
plot(FluTrain$ILI, FluTrain$ILI_Lag2)
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:-2]))
plot(FluTrain$ILI, FluTrain$ILI_Lag2)
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
FluTrain$ILI_Lag2 == FluTrain$ILI
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:length(FluTrain$ILI)-2]))
FluTrain$ILI[0:length(FluTrain$ILI)-2]
length(FluTrain$ILI)-2
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:415]))
length(FluTrain$ILI)-2
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
summary(FluTrend2)$r.squared
sum(((predict(FluTrend2, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
mean((predict(FluTrend2, FluTrain)-log(FluTrain$ILI))**2))
mean((predict(FluTrend2, FluTrain)-log(FluTrain$ILI))**2)
predict(FluTrend2, FluTrain)
mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2)
mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2)
predict(FluTrend2, FluTrain)-FluTrain$ILI
(predict(FluTrend2, FluTrain)-FluTrain$ILI)**2
mean(dropna((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2))
mean(drop_na(predict(FluTrend2, FluTrain)-FluTrain$ILI)**2)
mean(drop_na(predict(FluTrend2, FluTrain)-FluTrain$ILI**2))
mean(predict(FluTrend2, FluTrain)-FluTrain$ILI**2, na.rm=TRUE))
mean(predict(FluTrend2, FluTrain)-FluTrain$ILI**2, na.rm=TRUE)
mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
#Data preparation
FluTrain <- read.csv("U:/Cours/IMC-5101B/TP1/FluTrain.csv", header=FALSE)
colnames(FluTrain) = c("Weeks", "ILI", "Queries")
attach(FluTrain)
install.packages("tidyr")
library(tidyr)
FluTrain = separate(data = FluTrain, col = Weeks, into = c("date1", "date2"), sep = " - " )
FluTrain$date1 = strptime(FluTrain$date1,format="%Y-%m-%d")
FluTrain$date2 = strptime(FluTrain$date2,format="%Y-%m-%d")
FluTrain$year = FluTrain$date1$year + 1900
FluTrain$week = as.numeric( format(FluTrain$date1+3, "%U"))
FluTrain$day = FluTrain$date1$nday
FluTrain$month = FluTrain$date1$mon+1
plot(ILI,Queries)
FluTrain20042011 <- subset(FluTrain, year > 2004)
detach(FluTrain20042011)
plot(FluTrain20042011$ILI,FluTrain20042011$Queries)
table(as.factor(year))
#Cycle of Iliness over years
plot(FluTrain20042011$ILI)
plot(FluTrain20042011$Queries)
#2.1.1
# Question 1)
FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mon+1)
# Question 2)
FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
histoILI = hist(FluTrain$ILI)
#Most of the ILI values are small, with a relatively small number of much larger values (in statistics, this sort of data is called "skew right").
#2.2.3
plot((log(FluTrain$ILI)~(FluTrain$Queries)))
#There is a positive, linear relationship between log(ILI) and Queries.
#2.2.4
#log(ILI) = 0 + 1  Queries, where the slope 1 is positive.  ( SIXTH answer)
#2.2.5
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared = summary(FluTrend1)$r.squared
Rsquared
#2.3
FluTest <- read.csv("U:/Cours/IMC-5101B/TP1/FluTest.csv", header=FALSE)
colnames(FluTest) = c("Weeks", "ILI", "Queries")
head(FluTest)
#2.3.6
paste("Predicted value for 11th March 2012 : " ,exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",])))
#2.3.7
paste("The real value for 11th March 2012 : " ,FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)
paste("Squared error : " ,(exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]))-FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)**2)
#2.3.8
sum(((exp(predict(FluTrend1, FluTest))-FluTest$ILI)**2))/length(FluTest$ILI)
library(hydroGOF)
#2.4
#2.4.9
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:415]))
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
#There is a strong positive relationship between log(ILI Lag2) and log(ILI).
#2.4.10
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
summary(FluTrend2)$r.squared
mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
install.packages("hydroGOF")
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared
#2.3
FluTest <- read.csv("U:/Cours/IMC-5101B/TP1/FluTest.csv", header=FALSE)
colnames(FluTest) = c("Weeks", "ILI", "Queries")
head(FluTest)
#2.3.6
paste("Predicted value for 11th March 2012 : " ,exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",])))
#2.3.7
paste("The real value for 11th March 2012 : " ,FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)
paste("Squared error : " ,(exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]))-FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)**2)
#2.3.8
sum(((exp(predict(FluTrend1, FluTest))-FluTest$ILI)**2))/length(FluTest$ILI)
library(hydroGOF)
#2.4
#2.4.9
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:415]))
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
#There is a strong positive relationship between log(ILI Lag2) and log(ILI).
#2.4.10
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
summary(FluTrend2)$r.squared
mseTrend2 = mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
Rsquared2 = summary(FluTrend2)$r.squared
#2.4.11
mseTrend2<mseTrend1.1
Rsquared2>Rsquared1
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
#Data preparation
FluTrain <- read.csv("U:/Cours/IMC-5101B/TP1/FluTrain.csv", header=FALSE)
colnames(FluTrain) = c("Weeks", "ILI", "Queries")
attach(FluTrain)
#install.packages("tidyr")
#install.packages("hydroGOF")
library(tidyr)
FluTrain = separate(data = FluTrain, col = Weeks, into = c("date1", "date2"), sep = " - " )
FluTrain$date1 = strptime(FluTrain$date1,format="%Y-%m-%d")
FluTrain$date2 = strptime(FluTrain$date2,format="%Y-%m-%d")
FluTrain$year = FluTrain$date1$year + 1900
FluTrain$week = as.numeric( format(FluTrain$date1+3, "%U"))
FluTrain$day = FluTrain$date1$nday
FluTrain$month = FluTrain$date1$mon+1
plot(ILI,Queries)
FluTrain20042011 <- subset(FluTrain, year > 2004)
detach(FluTrain20042011)
plot(FluTrain20042011$ILI,FluTrain20042011$Queries)
table(as.factor(year))
#Cycle of Iliness over years
plot(FluTrain20042011$ILI)
plot(FluTrain20042011$Queries)
#2.1.1
# Question 1)
FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mon+1)
# Question 2)
FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
histoILI = hist(FluTrain$ILI)
#Most of the ILI values are small, with a relatively small number of much larger values (in statistics, this sort of data is called "skew right").
#2.2.3
plot((log(FluTrain$ILI)~(FluTrain$Queries)))
#There is a positive, linear relationship between log(ILI) and Queries.
#2.2.4
#log(ILI) = 0 + 1  Queries, where the slope 1 is positive.  ( SIXTH answer)
#2.2.5
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared
#2.3
FluTest <- read.csv("U:/Cours/IMC-5101B/TP1/FluTest.csv", header=FALSE)
colnames(FluTest) = c("Weeks", "ILI", "Queries")
head(FluTest)
#2.3.6
paste("Predicted value for 11th March 2012 : " ,exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",])))
#2.3.7
paste("The real value for 11th March 2012 : " ,FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)
paste("Squared error : " ,(exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]))-FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)**2)
#2.3.8
sum(((exp(predict(FluTrend1, FluTest))-FluTest$ILI)**2))/length(FluTest$ILI)
library(hydroGOF)
#2.4
#2.4.9
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:415]))
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
#There is a strong positive relationship between log(ILI Lag2) and log(ILI).
#2.4.10
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
summary(FluTrend2)$r.squared
mseTrend2 = mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
Rsquared2 = summary(FluTrend2)$r.squared
#2.4.11
mseTrend2<mseTrend1.1
Rsquared2>Rsquared1
FluTrain <- read.csv("U:/Cours/IMC-5101B/TP1/FluTrain.csv", header=FALSE)
FluTrain <- read.csv("FluTrain.csv", header=FALSE)
colnames(FluTrain) = c("Weeks", "ILI", "Queries")
attach(FluTrain)
FluTrain <- read.csv("FluTrain.csv", header=FALSE)
colnames(FluTrain) = c("Weeks", "ILI", "Queries")
#install.packages("tidyr")
#install.packages("hydroGOF")
library(tidyr)
FluTrain = separate(data = FluTrain, col = Weeks, into = c("date1", "date2"), sep = " - " )
FluTrain$date1 = strptime(FluTrain$date1,format="%Y-%m-%d")
FluTrain$date2 = strptime(FluTrain$date2,format="%Y-%m-%d")
FluTrain$year = FluTrain$date1$year + 1900
FluTrain$week = as.numeric( format(FluTrain$date1+3, "%U"))
FluTrain$day = FluTrain$date1$nday
FluTrain$month = FluTrain$date1$mon+1
plot(ILI,Queries)
FluTrain20042011 <- subset(FluTrain, year > 2004)
detach(FluTrain20042011)
plot(FluTrain20042011$ILI,FluTrain20042011$Queries)
FluTrain20042011 <- subset(FluTrain, year > 2004)
plot(FluTrain20042011$ILI,FluTrain20042011$Queries)
table(as.factor(year))
table(as.factor(FluTrain20042011$year))
#Cycle of Iliness over years
plot(FluTrain20042011$ILI)
plot(FluTrain20042011$Queries)
#2.1.1
# Question 1)
FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]
paste("The week is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$ILI==max(FluTrain20042011$ILI),]$date1$mon+1)
# Question 2)
FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]
paste("The week is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$week)
paste("The day is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mday)
paste("The month is ",FluTrain20042011[FluTrain20042011$Queries==max(FluTrain20042011$Queries),]$date1$mon+1)
#2.1.2
histoILI = hist(FluTrain$ILI)
#Most of the ILI values are small, with a relatively small number of much larger values (in statistics, this sort of data is called "skew right").
#2.2.3
plot((log(FluTrain$ILI)~(FluTrain$Queries)))
#There is a positive, linear relationship between log(ILI) and Queries.
#2.2.4
#log(ILI) = 0 + 1  Queries, where the slope 1 is positive.  ( SIXTH answer)
#2.2.5
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared
#2.3
FluTest <- read.csv("U:/Cours/IMC-5101B/TP1/FluTest.csv", header=FALSE)
FluTest <- read.csv("FluTest.csv", header=FALSE)
colnames(FluTest) = c("Weeks", "ILI", "Queries")
head(FluTest)
#2.3.6
paste("Predicted value for 11th March 2012 : " ,exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",])))
#2.3.7
paste("The real value for 11th March 2012 : " ,FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)
paste("Squared error : " ,(exp(predict(FluTrend1, FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]))-FluTest[FluTest$Weeks=="2012-03-11 - 2012-03-17",]$ILI)**2)
#2.3.8
sum(((exp(predict(FluTrend1, FluTest))-FluTest$ILI)**2))/length(FluTest$ILI)
library(hydroGOF)
#2.4
#2.4.9
FluTrain$ILI_Lag2 = c(c(NA, NA), as.vector(FluTrain$ILI[0:415]))
plot(log(FluTrain$ILI_Lag2)~FluTrain$ILI)
#There is a strong positive relationship between log(ILI Lag2) and log(ILI).
#2.4.10
FluTrend2 = lm(log(ILI) ~ Queries + log(ILI_Lag2) , data = FluTrain)
summary(FluTrend2)
summary(FluTrend2)$r.squared
mseTrend2 = mean((predict(FluTrend2, FluTrain)-FluTrain$ILI)**2, na.rm=TRUE)
Rsquared2 = summary(FluTrend2)$r.squared
#2.4.11
mseTrend2<mseTrend1.1
Rsquared2>Rsquared1
mseTrend2
mseTrend1
mseTrend2<mseTrend1.1
Rsquared2>Rsquared1
#Due to overfitting, FluTrend2 is a weaker model then FluTrend1 on the training set.
FluTrain$ILI_Lag2
FluTrain
FluTest
summary(FluTest)
str(FluTest)
str(FluYTrain)
str(FluTrain)
FluTest$ILI_Lag2 = c( as.vector(FluTrain$ILI[415:417]), as.vector(FluTest$ILI[0:50]))
as.vector(FluTrain$ILI[415:417]
)
FluTest$ILI_Lag2 = c( as.vector(FluTrain$ILI[416:417]), as.vector(FluTest$ILI[0:50]))
as.vector(FluTrain$ILI[416:417])
predict(FluTrend2, FluTest)
exp(predict(FluTrend2, FluTest))
test_pred = exp(predict(FluTrend2, FluTest))
mse.test = mean((test_pred-FluTest$ILI)**2, na.rm=TRUE)
mse.test
mseTrend1
test_predTrend2 = exp(predict(FluTrend2, FluTest))
mse.test2 = mean((test_predTrend2-FluTest$ILI)**2, na.rm=TRUE)
#2.5.16
test_predTrend1 = exp(predict(FluTrend1, FluTest))
mse.test1 = mean((test_predTrend1-FluTest$ILI)**2, na.rm=TRUE)
mse.test1
#FluTrend2
mse.test2<mse.test1
#FluTrend2
arima(FluTest$ILI, order = c(3,0,0), method = "CSS")
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared1
Rsquared
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared
Rsquared.calc = 1- (sum(FluTrend1$residuals**2)/sum((log(FluTrain$ILI))-predict(FluTrend1, FluTrain))**2)
Rsquared.calc
Rsquared.calc = 1- (sum(predict(FluTrend1, FluTrain)- mean(log(FluTrain$ILI)))/sum((log(FluTrain$ILI))-mean(log(FluTrain$ILI)))**2)
Rsquared.calc
Rsquared.calc = (sum(predict(FluTrend1, FluTrain)- mean(log(FluTrain$ILI)))/sum((log(FluTrain$ILI))-mean(log(FluTrain$ILI)))**2)
Rsquared.calc
RSS.Trend1 <- sum(FluTrend1$residuals**2)
model0 = lm(log(ILI) ~ 1, data=FluTrain)
TSS <- sum(model0$residuals**2)
Rsquared.calc =  1-(RSS.Trend1 /TSS)
Rsquared.calc
FluTrend1 = lm(ILI ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.1
table(as.factor(FluTrain20042011$year))
FluTrain20042011 <- subset(FluTrain, year > 2003)
plot(FluTrain20042011$ILI,FluTrain20042011$Queries)
table(as.factor(FluTrain20042011$year))
table(as.factor(FluTrain$year))
FluTrain = separate(data = FluTrain, col = Weeks, into = c("date1", "date2"), sep = " - " )
FluTrain$date1 = strptime(FluTrain$date1,format="%Y-%m-%d")
FluTrain$date2 = strptime(FluTrain$date2,format="%Y-%m-%d")
FluTrain$year = FluTrain$date1$year + 1900
FluTrain$week = as.numeric( format(FluTrain$date1+3, "%U"))
FluTrain$day = FluTrain$date1$nday
FluTrain$month = FluTrain$date1$mon+1
plot(ILI,Queries)
table(as.factor(FluTrain$year))
#Cycle of Iliness over years
plot(FluTrain$ILI)
plot(FluTrain$Queries)
#2.1.1
# Question 1)
FluTrain[FluTrain$ILI==max(FluTrain$ILI),]
paste("The week is ",FluTrain[FluTrain$ILI==max(FluTrain$ILI),]$week)
paste("The day is ",FluTrain[FluTrain$ILI==max(FluTrain$ILI),]$date1$mday)
paste("The month is ",FluTrain[FluTrain$ILI==max(FluTrain$ILI),]$date1$mon+1)
# Question 2)
FluTrain[FluTrain$Queries==max(FluTrain$Queries),]
paste("The week is ",FluTrain[FluTrain$Queries==max(FluTrain$Queries),]$week)
paste("The day is ",FluTrain[FluTrain$Queries==max(FluTrain$Queries),]$date1$mday)
paste("The month is ",FluTrain[FluTrain$Queries==max(FluTrain$Queries),]$date1$mon+1)
#2.1.2
histoILI = hist(FluTrain$ILI)
#Most of the ILI values are small, with a relatively small number of much larger values (in statistics, this sort of data is called "skew right").
#2.2.3
plot((log(FluTrain$ILI)~(FluTrain$Queries)))
#There is a positive, linear relationship between log(ILI) and Queries.
#2.2.4
#log(ILI) = 0 + 1  Queries, where the slope 1 is positive.  ( SIXTH answer)
#2.2.5
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
summary(FluTrend1)
mseTrend1.1 = sum(FluTrend1$residuals**2)/length(FluTrend1$residuals)
mseTrend1.2 = sum(((predict(FluTrend1, FluTrain)-log(FluTrain$ILI))**2))/length(FluTrain$ILI)
Rsquared1 = summary(FluTrend1)$r.squared
Rsquared1
RSS.Trend1 <- sum(FluTrend1$residuals**2)
model0 = lm(log(ILI) ~ 1, data=FluTrain)
TSS <- sum(model0$residuals**2)
Rsquared.calc =  1-(RSS.Trend1 /TSS)
Rsquared.calc
plot(FluTrain$ILI, col="green")
arima(FluTest$ILI, order = c(3,0,0), method = "CSS")
plot(FluTrain$ILI, col="green")
lines(FluTrain$Queries, col="red")
plot(FluTrain$ILI/mean(FluTrain$ILI), col="green")
lines(FluTrain$Queries/mean(FluTrain$Queries), col="red")
plot(FluTrain$ILI/mean(FluTrain$ILI), col="blue")
lines(FluTrain$Queries/mean(FluTrain$Queries), col="red")
library(ggplot2)
ggplot(FluTrain, aes(Weeks, ILI))
ggplot(FluTrain, aes(Weeks, ILI))+
geom_point(aes(color = cyl))
ggplot(FluTrain, aes(Weeks, ILI))+
geom_point()
ggplot(FluTrain, aes(Weeks, ILI))+
geom_point(Queries) +
geom_point()
p <- ggplot() +
# blue plot
geom_point(data=FluTrain, aes(x=Weeks, y=ILI)) +
#geom_smooth(data=FluTrain, aes(x=Weeks, y=COUNTED), fill="blue", colour="darkblue", size=1) +
# red plot
geom_point(data=FluTrain, aes(x=Weeks, y=Queries)) +
#geom_smooth(data=FluTrain, aes(x=Weeks, y=COUNTED), fill="red",              colour="red", size=1)
p
p <- ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=ILI)) +
geom_point(data=FluTrain, aes(x=Weeks, y=Queries))
p
p <- ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=ILI)) +
geom_point(data=FluTrain, aes(x=Weeks, y=Queries))+
scale_x_continuous()
p
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=ILI)) +
geom_point(data=FluTrain, aes(x=Weeks, y=Queries))+
scale_y_continuous()
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=ILI), col="red") +
geom_point(data=FluTrain, aes(x=Weeks, y=Queries), col="blue")+
scale_y_continuous()
ggplot() +
geom_line(data=FluTrain, aes(x=Weeks, y=ILI), col="red") +
geom_line(data=FluTrain, aes(x=Weeks, y=Queries), col="blue")+
scale_y_continuous()
FluTrain$val1 = val1
FluTrain$val2 = val2
val1 = FluTrain$ILI / mean(FluTrain$ILI)
val2 = FluTrain$Queries / mean(FluTrain$ILI)
FluTrain$val1 = val1
FluTrain$val2 = val2
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=va1), col="red") +
geom_point(data=FluTrain, aes(x=Weeks, y=val2), col="blue")+
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=va1), col="red") +
geom_point(data=FluTrain, aes(x=Weeks, y=val2), col="blue")
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=va1), col="red") +
geom_point(data=FluTrain, aes(x=Weeks, y=val2), col="blue")
ggplot() +
geom_point(data=FluTrain, aes(x=Weeks, y=val1), col="red") +
geom_point(data=FluTrain, aes(x=Weeks, y=val2), col="blue")
plot(FluTrain$ILI/mean(FluTrain$ILI), col="blue", type="")
lines(FluTrain$Queries/mean(FluTrain$Queries), col="red")
plot(FluTrain$ILI/mean(FluTrain$ILI), col="blue")
lines(FluTrain$Queries/mean(FluTrain$Queries), col="red")
